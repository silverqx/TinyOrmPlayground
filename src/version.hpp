#pragma once
#ifndef TINYPLAY_VERSION_HPP
#define TINYPLAY_VERSION_HPP

#define TINYPLAY_VERSION_MAJOR 0
#define TINYPLAY_VERSION_MINOR 6
#define TINYPLAY_VERSION_BUGFIX 0
#define TINYPLAY_VERSION_BUILD 0
// Should be empty for stable releases, and use hypen before for SemVer compatibility!
#define TINYPLAY_VERSION_STATUS ""

// NOLINTNEXTLINE(bugprone-reserved-identifier)
#define TINYPLAY__STRINGIFY(x) #x
#define TINYPLAY_STRINGIFY(x) TINYPLAY__STRINGIFY(x)

#if TINYPLAY_VERSION_BUILD != 0
#  define TINYPLAY_PROJECT_VERSION TINYPLAY_STRINGIFY( \
     TINYPLAY_VERSION_MAJOR.TINYPLAY_VERSION_MINOR.TINYPLAY_VERSION_BUGFIX.TINYPLAY_VERSION_BUILD \
   ) TINYPLAY_VERSION_STATUS
#else
#  define TINYPLAY_PROJECT_VERSION TINYPLAY_STRINGIFY( \
     TINYPLAY_VERSION_MAJOR.TINYPLAY_VERSION_MINOR.TINYPLAY_VERSION_BUGFIX \
   ) TINYPLAY_VERSION_STATUS
#endif

/* Version Legend:
   M = Major, m = minor, p = patch, t = tweak, s = status ; [] - excluded if 0 */

// Format - M.m.p.t (used in Windows RC file)
#define TINYPLAY_FILEVERSION_STR TINYPLAY_STRINGIFY( \
    TINYPLAY_VERSION_MAJOR.TINYPLAY_VERSION_MINOR.TINYPLAY_VERSION_BUGFIX.TINYPLAY_VERSION_BUILD)
// Format - M.m.p[.t]-s
#define TINYPLAY_VERSION_STR TINYPLAY_PROJECT_VERSION
// Format - vM.m.p[.t]-s
#define TINYPLAY_VERSION_STR_2 "v" TINYPLAY_PROJECT_VERSION

/*! Version number macro, can be used to check API compatibility, format - MMmmpp. */
#define TINYPLAY_VERSION \
    (TINYPLAY_VERSION_MAJOR * 10000 + TINYPLAY_VERSION_MINOR * 100 + TINYPLAY_VERSION_BUGFIX)

#endif // TINYPLAY_VERSION_HPP
